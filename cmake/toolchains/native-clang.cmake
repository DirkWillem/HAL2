set(TOOLCHAIN_PREFIX "")

unset(CMAKE_OSX_SYSROOT CACHE)

# Find llvm from homebrew if running under macOS
find_program(HOMEBREW brew)
if (HOMEBREW)
    execute_process(COMMAND "${HOMEBREW}" --prefix llvm
            RESULT_VARIABLE FIND_LLVM_STATUS
            OUTPUT_VARIABLE LLVM_PREFIX
            ERROR_VARIABLE FIND_LLVM_ERR
            OUTPUT_STRIP_TRAILING_WHITESPACE)

    if (FIND_LLVM_STATUS EQUAL 0)
        set(TOOLCHAIN_PREFIX "${LLVM_PREFIX}/bin/")
        message("Using homebrew LLVM at ${LLVM_PREFIX}/bin")
    else()
        message("Did not find LLVM")
    endif()

    execute_process(COMMAND "${HOMEBREW}" --prefix lld
            RESULT_VARIABLE FIND_LLD_STATUS
            OUTPUT_VARIABLE LLD_PREFIX
            ERROR_VARIABLE FIND_LLD_ERR
            OUTPUT_STRIP_TRAILING_WHITESPACE)

    if (FIND_LLD_STATUS EQUAL 0)
        set(LINKER_PREFIX "${LLD_PREFIX}/bin/")
        message("Using homebrew LLD at ${LLD_PREFIX}/bin")
    else()
        message("Did not find LLD")
    endif()
endif()


set(TOOLCHAIN_SUFFIX "")

if (NOT "${CLANG_EXPLICIT_VERSION}" STREQUAL "")
    set(CLANG_VERSION_SUFFIX "-${CLANG_EXPLICIT_VERSION}")
else()
    set(CLANG_VERSION_SUFFIX "")
endif()

set(CMAKE_CXX_FLAGS "-stdlib=libc++ -fexperimental-library")
set(CMAKE_EXE_LINKER_FLAGS "-stdlib=libc++ -fexperimental-library")



set(CMAKE_AR           ${TOOLCHAIN_PREFIX}llvm-ar${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX})
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_PREFIX}clang${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} )
set(CMAKE_ASM_COMPILER_TARGET ${CLANG_TARGET_TRIPLE})
set(CMAKE_C_COMPILER   ${TOOLCHAIN_PREFIX}clang${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} ${MACHINE_FLAGS})
set(CMAKE_C_COMPILER_TARGET ${CLANG_TARGET_TRIPLE})
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PREFIX}clang++${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} ${MACHINE_FLAGS})
set(CMAKE_CXX_COMPILER_TARGET ${CLANG_TARGET_TRIPLE})
set(CMAKE_LINKER       ${LLD_PREFIX}ld.lld${TOOLCHAIN_SUFFIX})
set(CMAKE_OBJCOPY      ${TOOLCHAIN_PREFIX}llvm-objcopy${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} CACHE INTERNAL "")
set(CMAKE_RANLIB       ${TOOLCHAIN_PREFIX}llvm-ranlib${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} CACHE INTERNAL "")
set(CMAKE_SIZE         ${TOOLCHAIN_PREFIX}llvm-size${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} CACHE INTERNAL "")
set(CMAKE_STRIP        ${TOOLCHAIN_PREFIX}llvm-strip${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} CACHE INTERNAL "")
set(CMAKE_GCOV         ${TOOLCHAIN_PREFIX}llvm-cov${CLANG_VERSION_SUFFIX}${TOOLCHAIN_SUFFIX} gcov CACHE INTERNAL "")
